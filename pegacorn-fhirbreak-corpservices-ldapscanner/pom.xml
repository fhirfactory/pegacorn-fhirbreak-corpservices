<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- Based on https://github.com/wildfly-extras/wildfly-camel-examples/blob/master/camel-jms/pom.xml -->

    <parent>
        <groupId>net.fhirfactory.pegacorn</groupId>
        <artifactId>pegacorn-fhirbreak-corpservices</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../pegacorn-fhirbreak-corpservices</relativePath>
    </parent>


    <artifactId>pegacorn-fhirbreak-corpservices-ldapscanner</artifactId>
    <name>Pegacorn :: FHIRBreak :: Corporate Services :: LDAP Scanner</name>
    <description>Corpservices - LDAP Scanner</description>
    <packaging>war</packaging>

    <scm>
    	<url>http://pegacorn.fhirfactory.net</url>
    </scm>

    <!--  All the current unit tests required pegacorn-fhirbreak to be running in Docker. For now easier to ignore all tests -->
    <properties>
        <maven.test.skip>false</maven.test.skip>
	    <version-pegacorn>1.0.0-SNAPSHOT</version-pegacorn>
    </properties>


    <dependencies>
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>5.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-hl7</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-fhir</artifactId>
        </dependency>
        <!-- This dependency includes the core HAPI-FHIR classes -->
        <dependency>
            <groupId>ca.uhn.hapi.fhir</groupId>
            <artifactId>hapi-fhir-base</artifactId>
            <version>${version-ca.uhn.hapi.fhir}</version>
        </dependency>

        <!-- At least one "structures" JAR must also be included -->
        <dependency>
            <groupId>ca.uhn.hapi.fhir</groupId>
            <artifactId>hapi-fhir-structures-r4</artifactId>
            <version>${version-ca.uhn.hapi.fhir}</version>
        </dependency>

        <!-- Used for validation -->
        <dependency>
            <groupId>ca.uhn.hapi.fhir</groupId>
            <artifactId>hapi-fhir-validation-resources-r4</artifactId>
            <version>${version-ca.uhn.hapi.fhir}</version>
        </dependency>
        
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-apacheds</artifactId>
            <type>jar</type>
            <scope>compile</scope>
            <version>${project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-datamodels-ldap</artifactId>
            <type>jar</type>
            <scope>compile</scope>
            <version>${project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-workunitprocessors</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.msc</groupId>
            <artifactId>jboss-msc</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>${version-javax.enterprise-cdi-api}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.jms</groupId>
            <artifactId>jboss-jms-api_2.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_4.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- Include the client -->
        <dependency>
            <groupId>ca.uhn.hapi.fhir</groupId>
            <artifactId>hapi-fhir-client</artifactId>
            <version>${version-ca.uhn.hapi.fhir}</version>
        </dependency>
               <!-- Pegacorn Common Code -->
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-platform-commoncode</artifactId>
            <type>jar</type>
            <scope>compile</scope>
            <version>${project.version}</version>
        </dependency>
        <!-- Pegacorn::Petasos -->
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-platform-petasos-model</artifactId>
            <type>jar</type>
            <scope>compile</scope>
            <version>${project.version}</version>
        </dependency>
               
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-platform-petasos-datasets</artifactId>
            <type>jar</type>
            <scope>compile</scope>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-platform-petasos-core</artifactId>
            <type>jar</type>
            <scope>compile</scope>
            <version>${project.version}</version>
        </dependency>

        <!-- Pegacorn::BuildingBlocks -->
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-processingplant</artifactId>
            <version>${version-pegacorn}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${version-org.json}</version>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-processingplant</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${version-org.apache.commons-lang3}</version>
        </dependency>
        <!-- Provided -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cdi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-endpointdsl</artifactId>
        </dependency>
        <dependency>
    		<groupId>org.apache.camel</groupId>
    		<artifactId>camel-ldap</artifactId>
		</dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-gson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-undertow</artifactId>
            <version>${version-org.apache.camel}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-netty-http</artifactId>
            <version>${version-org.apache.camel}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-servlet</artifactId>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat.embed</groupId>
                    <artifactId>tomcat-embed-logging-juli</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--                                      -->
        <!--               Test                   -->
        <!--                                      -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-edge-messaging</artifactId>
           <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-edge-model</artifactId>
           <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        
        <dependency>
    		<groupId>org.apache.directory.api</groupId>
    		<artifactId>api-ldap-model</artifactId>
   		 	<version>2.0.1</version>
		</dependency>
		
		<dependency>
  			<groupId>org.apache.directory.api</groupId>
    		<artifactId>api-all</artifactId>
    		<version>2.0.1</version>
		</dependency>
		 <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>4.1</version>
        </dependency>
		

    </dependencies>

  <!-- Profiles -->
    <profiles>
        <!-- Separate profiles are provided for running tests, including Arquillian tests that execute in a specified container -->
        <profile>
            <!-- The default profile skips all tests, though you can tune it to run just unit tests based on a custom pattern -->
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version-org.apache.maven-surefire-plugin}</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version-org.apache.maven-war-plugin}</version>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Dependencies>org.jboss.msc</Dependencies>
                                </manifestEntries>
                            </archive>
                            <webXml>${project.basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dev-workstation</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>${version-org.apache.maven-antrun-plugin}</version>
                        <executions>
                            <execution>
                                <id>subsystem-config-file-copy</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>ANT TASK - Copying Configuration files from
                                            ${project.basedir}/install/kubernetes to
                                            ${project.basedir}/target/classes
                                        </echo>
                                        <copy todir="${project.basedir}/target/classes/"
                                              overwrite="true" flatten="true">
                                            <fileset
                                                    dir="${project.basedir}/install/kubernetes/">
                                                <include name="systemconfig-*.yaml"/>
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-config-build</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>ANT TASK - Copying Docker files from
                                            ${project.basedir}/src/main/docker to
                                            ${project.basedir}/target/docker
                                        </echo>
                                        <copy todir="${project.basedir}/target/docker/"
                                              overwrite="true" flatten="true">
                                            <fileset
                                                    dir="${project.basedir}/src/main/docker/">
                                                <include name="*"/>
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>war-copy</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>ANT TASK - Copying Docker build files from
                                            ${project.basedir}/target/*.war to
                                            ${project.basedir}/target/docker
                                        </echo>
                                        <copy todir="${project.basedir}/target/docker/"
                                              overwrite="true" flatten="true">
                                            <fileset
                                                    dir="${project.basedir}/target/">
                                                <include name="*.war"/>
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>build-docker-image</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <workingDirectory>${project.basedir}/target/docker/</workingDirectory>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>--rm</argument>
                                        <argument>--build-arg</argument>
                                        <argument>IMAGE_BUILD_TIMESTAMP=${maven.build.timestamp}</argument>
                                        <argument>-t</argument>
                                        <argument>localhost:32000/${project.artifactId}:${project.version}</argument>
                                        <argument>--file</argument>
                                        <argument>Dockerfile</argument>
                                        <argument>${project.basedir}/target/docker/</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-image-to-repo</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <workingDirectory>${project.basedir}/target/docker/</workingDirectory>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>push</argument>
                                        <argument>localhost:32000/${project.artifactId}:${project.version}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version-org.apache.maven-war-plugin}</version>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Dependencies>org.jboss.msc</Dependencies>
                                </manifestEntries>
                            </archive>
                            <webXml>${project.basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>