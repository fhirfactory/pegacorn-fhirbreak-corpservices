<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.fhirfactory.pegacorn</groupId>
        <artifactId>pegacorn-fhirbreak-corpservices</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../pegacorn-fhirbreak-corpservices</relativePath>
    </parent>

    <artifactId>pegacorn-fhirbreak-ldapsync</artifactId>
    <packaging>jar</packaging>

    <name>Pegacorn :: FHIRBreak :: LDAP Sync</name>

    <url>http://pegacorn.fhirfactory.net</url>

    <properties>
        <netbeans.hint.license>mit</netbeans.hint.license>
    </properties>

    <dependencies>
        <!-- **************************** -->
        <!-- * javax and wildfly/JBoss  * -->
        <!-- **************************** -->
        <dependency>
            <groupId>org.jboss.msc</groupId>
            <artifactId>jboss-msc</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>${version-javax.enterprise-cdi-api}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_4.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- **************************** -->
        <!-- * Apache Camel             * -->
        <!-- **************************** -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cdi</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- **************************** -->
        <!-- * HAPI FHIR                * -->
        <!-- **************************** -->

        <!-- This dependency includes the core HAPI-FHIR classes -->
        <dependency>
            <groupId>ca.uhn.hapi.fhir</groupId>
            <artifactId>hapi-fhir-base</artifactId>
            <version>${version-ca.uhn.hapi.fhir}</version>
        </dependency>
        <!-- At least one "structures" JAR must also be included -->
        <dependency>
            <groupId>ca.uhn.hapi.fhir</groupId>
            <artifactId>hapi-fhir-structures-r4</artifactId>
            <version>${version-ca.uhn.hapi.fhir}</version>
        </dependency>
        <!-- Used for validation -->
        <!--
        <dependency>
            <groupId>ca.uhn.hapi.fhir</groupId>
            <artifactId>hapi-fhir-validation-resources-r4</artifactId>
            <version>${version-ca.uhn.hapi.fhir}</version>
        </dependency> -->

        <!-- **************************** -->
        <!-- * Pegacorn Components      * -->
        <!-- **************************** -->
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-platform-petasos-model</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-workunitprocessors</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        
        
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-platform-petasos-datasets</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-platform-petasos-core</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-platform-petasos-ipc</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-deployment-properties</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-datamodels-ldap</artifactId>
            <type>jar</type>
            <scope>compile</scope>
            <version>${project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-deployment-datasets</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-deployment-topology</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-edge-messaging</artifactId>
           <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-edge-model</artifactId>
           <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-processingplant</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${version-ch.qos.logback-classic}</version>
        </dependency>

        <!-- **************************** -->
        <!-- * Ancillary Libraries      * -->
        <!-- **************************** -->

        <!-- Apache Commons -->

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${version-org.apache.commons-lang3}</version>
        </dependency>
        <!-- Jackson JSON/XML Libraries -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${version-com.fasterxml.jackson.core-jackson-core}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${version-com.fasterxml.jackson.core-jackson-databind}</version>
        </dependency>
        <!-- Common/Basic JSON -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${version-org.json}</version>
            <scope>compile</scope>
        </dependency>


         <dependency>
            <groupId>net.fhirfactory.pegacorn</groupId>
            <artifactId>pegacorn-buildingblocks-apacheds</artifactId>
            <type>jar</type>
            <scope>compile</scope>
            <version>${project.version}</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${version-org.apache.maven-surefire-plugin}</version>
            <type>maven-plugin</type>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

 	 <!-- Profiles -->
    <profiles>
        <!-- Separate profiles are provided for running tests, including Arquillian tests that execute in a specified container -->
        <profile>
            <!-- The default profile skips all tests, though you can tune it to run just unit tests based on a custom pattern -->
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version-org.apache.maven-surefire-plugin}</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version-org.apache.maven-war-plugin}</version>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Dependencies>org.jboss.msc</Dependencies>
                                </manifestEntries>
                            </archive>
                            <webXml>${project.basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dev-workstation</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>${version-org.apache.maven-antrun-plugin}</version>
                        <executions>
                            <execution>
                                <id>subsystem-config-file-copy</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>ANT TASK - Copying Configuration files from
                                            ${project.basedir}/install/kubernetes to
                                            ${project.basedir}/target/classes
                                        </echo>
                                        <copy todir="${project.basedir}/target/classes/"
                                              overwrite="true" flatten="true">
                                            <fileset
                                                    dir="${project.basedir}/install/kubernetes/">
                                                <include name="systemconfig-*.yaml"/>
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-config-build</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>ANT TASK - Copying Docker files from
                                            ${project.basedir}/src/main/docker to
                                            ${project.basedir}/target/docker
                                        </echo>
                                        <copy todir="${project.basedir}/target/docker/"
                                              overwrite="true" flatten="true">
                                            <fileset
                                                    dir="${project.basedir}/src/main/docker/">
                                                <include name="*"/>
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>war-copy</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>ANT TASK - Copying Docker build files from
                                            ${project.basedir}/target/*.war to
                                            ${project.basedir}/target/docker
                                        </echo>
                                        <copy todir="${project.basedir}/target/docker/"
                                              overwrite="true" flatten="true">
                                            <fileset
                                                    dir="${project.basedir}/target/">
                                                <include name="*.war"/>
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>build-docker-image</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <workingDirectory>${project.basedir}/target/docker/</workingDirectory>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>--rm</argument>
                                        <argument>--build-arg</argument>
                                        <argument>IMAGE_BUILD_TIMESTAMP=${maven.build.timestamp}</argument>
                                        <argument>-t</argument>
                                        <argument>localhost:32000/${project.artifactId}:${project.version}</argument>
                                        <argument>--file</argument>
                                        <argument>Dockerfile</argument>
                                        <argument>${project.basedir}/target/docker/</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-image-to-repo</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <workingDirectory>${project.basedir}/target/docker/</workingDirectory>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>push</argument>
                                        <argument>localhost:32000/${project.artifactId}:${project.version}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version-org.apache.maven-war-plugin}</version>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Dependencies>org.jboss.msc</Dependencies>
                                </manifestEntries>
                            </archive>
                            <webXml>${project.basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
