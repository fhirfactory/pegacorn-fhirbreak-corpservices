---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project={{ .Values.serviceName }}&var-version={{ .Values.imageTag }}
  labels:
    app: {{ .Values.subsystemInstant.subsystemName }}
    provider: fabric8
    version: {{ .Values.subsystemInstant.subsystemVersion }}
    group: {{ .Values.subsystemInstant.solutionGroup }}
  name: {{ .Values.subsystemInstant.subsystemName }}
spec:
  replicas: {{ .Values.deploymentMode.processingPlantReplicationCount }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ .Values.subsystemInstant.subsystemName }}
      provider: fabric8
      group: {{ .Values.subsystemInstant.solutionGroup }}
  template:
    metadata:
      annotations:
        fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project={{ .Values.serviceName }}&var-version={{ .Values.imageTag }}
      labels:
        app: {{ .Values.subsystemInstant.subsystemName }}
        provider: fabric8
        version: {{ .Values.subsystemInstant.subsystemVersion }}
        group: {{ .Values.subsystemInstant.solutionGroup }}
        cluster: {{ .Values.deploymentZone.securityZoneName }}
        date: "{{ date "20060102-150405" .Release.Time }}"
    spec:
      containers:
        - env:
          - name: WILDFLY_LOG_LEVEL
            value: "WARN"
          - name: JAVAX_NET_DEBUG
            value: "none"
          - name: WILDFLY_ENABLE_DEBUG
            value: "no"
          - name: KUBERNETES_SERVICE_NAME
            value: {{ .Values.serviceName }}
          - name: MY_HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MY_STACK
            value: "privnet.xml"
          - name: MY_POD_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JVM_MAX_HEAP_SIZE
            value: "1024m"
          - name: APACHEDS_HOST_NAME
            value: "pegacorn-apacheds-mimic.site-a"
          - name: APACHEDS_CONNECT_CREDENTIAL
            value: "Peg@corn"
          - name: APACHEDS_CONNECT_NAME
            value: "uid=admin,ou=system"
          - name: APACHEDS_BASE_PORT
            value: "30000"
          - name: DEPLOYMENT_CONFIG_FILE
            value: {{ .Values.deploymentMode.deploymentConfig }}
          # Set the minimum memory that will be available on the node to assign to the container to be the jvmMaxHeapSizeMB plus 128 MB
          # for the native heap and operation system processes associated with running Java
          # See https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/#motivation-for-memory-requests-and-limits
          # and https://www.alibabacloud.com/blog/kubernetes-demystified-restrictions-on-java-application-resources_594108
          resources:
            requests:
              memory: "1024Mi"
          image: {{ .Values.subsystemImageProperties.repository }}/{{ .Values.subsystemImageProperties.imageName }}:{{ .Values.subsystemImageProperties.imageVersion }}
          imagePullPolicy: {{ .Values.subsystemImageProperties.pullPolicy }}
          livenessProbe:
            httpGet:
              path: {{ .Values.kubeLivelinessProbe.webServicePath }}
              port: {{ .Values.kubeLivelinessProbe.portValue }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.kubeLivelinessProbe.startupDelay }}
          name: {{ .Values.subsystemInstant.subsystemName }}
          ports:
            - containerPort: {{ .Values.interZoneIPC.portValue }}
              name: {{ .Values.interZoneIPC.name }}
              protocol: TCP
            - containerPort: {{ .Values.intraZoneIPC.portValue }}
              name: {{ .Values.intraZoneIPC.name }}
              protocol: TCP
            - containerPort: {{ .Values.edgeAnswer.portValue }}
              name: {{ .Values.edgeAnswer.name }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: {{ .Values.kubeReadinessProbe.webServicePath }}
              port: {{ .Values.kubeReadinessProbe.portValue }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.kubeReadinessProbe.startupDelay }}
          securityContext:
            privileged: false
      terminationGracePeriodSeconds: 30